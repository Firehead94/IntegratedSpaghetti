DROP FINANCIAL;
DROP INVOICE;
DROP REGISTRATION;
DROP SECTION;
DROP COURSE;
DROP USERS;
DROP STUDENT;
DROP FACULTY;
DROP PROGRAM;
DROP DEPARTMENT;


CREATE TABLE DEPARTMENT (
	DEPT_ID INT NOT NULL AUTO_INCREMENT,
	DEPT_TITLE VARCHAR(255) NOT NULL,
	DEPT_ABR VARCHAR(10) NOT NULL,
	PRIMARY KEY (DEPT_ID)
);

CREATE TABLE PROGRAM (
	PROGRAM_ID INT NOT NULL AUTO_INCREMENT,
	PROGRAM_TITLE VARCHAR(255) NOT NULL,
	DEPT_ID INT NOT NULL,
	PRIMARY KEY (PROGRAM_ID),
	FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

CREATE TABLE FACULTY (
	FACULTY_ID INT NOT NULL AUTO_INCREMENT,
	DEPT_ID INT,
	PRIMARY KEY (FACULTY_ID),
	FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

CREATE TABLE STUDENT (
	STU_ID INT NOT NULL AUTO_INCREMENT,
	PROGRAM_ID INT NOT NULL,
	PRIMARY KEY (STU_ID),
	FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM(PROGRAM_ID)
);

CREATE TABLE USERS (
	USER_ID INT NOT NULL AUTO_INCREMENT,
	STU_ID INT,
	FACULTY_ID INT,
	USER_FIRST_NAME VARCHAR(255) NOT NULL,
	USER_LAST_NAME VARCHAR(255) NOT NULL,
	USER_ADDRESS VARCHAR(255) NOT NULL,
	USER_CITY VARCHAR(255) NOT NULL,
	USER_STATE VARCHAR(255) NOT NULL,
	USER_ZIP INT NOT NULL,
	USER_COUNTRY VARCHAR(255) NOT NULL,
	USER_PASSWORD VARCHAR(255) NOT NULL,
	USER_CREATION_DATE DATE NOT NULL,
	USERNAME VARCHAR(255) NOT NULL,
	PRIMARY KEY (USER_ID),
	FOREIGN KEY (STU_ID) REFERENCES STUDENT(STU_ID),
	FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(STU_ID)
);

CREATE TABLE COURSE (
	COURSE_ID INT NOT NULL AUTO_INCREMENT,
	COURSE_TITLE VARCHAR(255) NOT NULL,
	COURSE_DESCRIPT VARCHAR(MAX),
	COURSE_CREDITS INT NOT NULL,
	COURSE_COST INT NOT NULL,
	DEPT_ID INT NOT NULL,
	PRIMARY KEY (COURSE_ID),
	FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

CREATE TABLE SECTION {
	SECTION_NUM INT NOT NULL AUTO_INCREMENT,
	COURSE_ID INT NOT NULL,
	SECTION_DAY INT NOT NULL,
	SECTION_TIME INT NOT NULL,
	SECTION_LOCATION VARCHAR(255) NOT NULL,
	FACULTY_ID INT,
	PRIMARY KEY (SECTION_NUM),
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
	FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(FACULTY_ID)
}

CREATE TABLE REGISTRATION (
	STU_ID INT NOT NULL,
	SECTION_NUM INT NOT NULL,
	GPA INT,
	GRADE VARCHAR(2),
	PRIMARY KEY (STU_ID, SECTION_NUM),
	FOREIGN KEY (STU_ID) REFERENCES STUDENT(STU_ID),
	FOREIGN KEY (SECTION_NUM) REFERENCES SECTION(SECTION_NUM)
);

CREATE TABLE INVOICE (
	INVOICE_ID INT NOT NULL AUTO_INCREMENT,
	CREDITCARD_NUM INT,
	STU_ID INT NOT NULL,
	INVOICE_PAYMENT INT NOT NULL,
	INVOICE_DATE DATE NOT NULL,
	PRIMARY KEY (INVOICE_ID),
	FOREIGN KEY (STU_ID) REFERENCES FINANCIAL(STU_ID),
	FOREIGN KEY (CREDITCARD_NUM) REFERENCES FINANCIAL(CREDITCARD_NUM)
);

CREATE TABLE FINANCIAL (
	STU_ID INT NOT NULL,
	CREDITCARD_NUM LONG NOT NULL,
	EXP_DATE DATE NOT NULL,
	BILLING_ADDRESS VARCHAR(255) NOT NULL,
	BILLING_CITY VARCHAR(255) NOT NULL,
	BILLING_STATE VARCHAR(255) NOT NULL,
	BILLING_ZIP INT NOT NULL,
	BILLING_NAME VARCHAR(255) NOT NULL,
	BALANCE INT,
	PRIMARY KEY (STU_ID, CREDITCARD_NUM),
	FOREIGN KEY (STU_ID) REFERENCES STUDENT(STU_ID)
);

INSERT INTO COURSE (COURSE_TITLE, COURSE_DESCRIPT, COURSE_CREDITS, COURSE_CREDITS, DEPT_ID)
VALUES (,,,,),
		(,,,,),
		(,,,,);